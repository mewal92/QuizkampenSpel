Index: src/QuizkampenClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.*;\r\nimport java.net.InetAddress;\r\nimport java.net.Socket;\r\n\r\n\r\npublic class QuizkampenClient implements ActionListener {\r\n    JFrame frame = new JFrame(\"Quizkampen\");\r\n    BufferedImage backgroundImage = ImageIO.read(new File(\"background.jpg\"));\r\n    JPanel basePanel = new JPanel();\r\n    JLabel title = new JLabel(\"Välkommen till Quizkampen!\");\r\n    JLabel title2 = new JLabel(\"Skriv ditt namn för att börja spela: \");\r\n    JButton play = new JButton(\"Starta spel\");\r\n    JTextField nameField = new JTextField(\"\",10);\r\n    int port = 44444;\r\n    InetAddress ip = InetAddress.getLocalHost();\r\n\r\n    public QuizkampenClient() throws IOException {\r\n        frame.setContentPane(new JLabel(new ImageIcon(backgroundImage)));\r\n        frame.setLayout(new FlowLayout());\r\n        frame.add(basePanel);\r\n        frame.setSize(800, 530);\r\n        frame.setVisible(true);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setResizable(false);\r\n        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n        basePanel.setLayout(new GridLayout(4,1));\r\n        basePanel.setBorder(new EmptyBorder(100, 100, 20 , 20));\r\n        title.setFont(new Font(\"Tahoma\", Font.PLAIN, 23 ));\r\n        basePanel.add(title);\r\n        basePanel.add(title2);\r\n        basePanel.add(nameField);\r\n        basePanel.setBackground(new Color(0, 0, 0, 0));\r\n\r\n        try(Socket sock = new Socket(ip, port)){\r\n            PrintWriter out = new PrintWriter(sock.getOutputStream(),true);\r\n            BufferedReader in = new BufferedReader(new InputStreamReader(sock.getInputStream()));\r\n            nameField.addActionListener(e -> out.println(nameField.getText()));\r\n            String serverResponse;\r\n            while((serverResponse = in.readLine()) != null){\r\n                title2.setText(serverResponse);\r\n                frame.revalidate();\r\n                frame.repaint();\r\n                basePanel.add(play);\r\n                play.addActionListener(e -> {out.println(\"startPressed\");});\r\n            }\r\n            while(in.readLine().equals(\"SETCATEGORY\")){\r\n                title.setText(\"Välj kategori\");\r\n                frame.remove(title2);\r\n                frame.repaint();\r\n                frame.revalidate();\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        new QuizkampenClient();\r\n    }\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        //if (e.getSource() == play) {}\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QuizkampenClient.java b/src/QuizkampenClient.java
--- a/src/QuizkampenClient.java	(revision fb246b873dc5b877095ef65f9de77beb5ab8b337)
+++ b/src/QuizkampenClient.java	(date 1669239782450)
@@ -9,6 +9,8 @@
 import java.net.InetAddress;
 import java.net.Socket;
 
+import static java.lang.System.out;
+
 
 public class QuizkampenClient implements ActionListener {
     JFrame frame = new JFrame("Quizkampen");
@@ -17,6 +19,10 @@
     JLabel title = new JLabel("Välkommen till Quizkampen!");
     JLabel title2 = new JLabel("Skriv ditt namn för att börja spela: ");
     JButton play = new JButton("Starta spel");
+    JButton cat1 = new JButton("Djur");
+    JButton cat2 = new JButton("Musik");
+    JButton cat3 = new JButton("Historia");
+    JButton cat4 = new JButton("Film");
     JTextField nameField = new JTextField("",10);
     int port = 44444;
     InetAddress ip = InetAddress.getLocalHost();
@@ -37,6 +43,10 @@
         basePanel.add(title2);
         basePanel.add(nameField);
         basePanel.setBackground(new Color(0, 0, 0, 0));
+        cat1.setSize(100,70);
+        cat2.setSize(100,70);
+        cat3.setSize(100,70);
+        cat4.setSize(100,70);
 
         try(Socket sock = new Socket(ip, port)){
             PrintWriter out = new PrintWriter(sock.getOutputStream(),true);
@@ -67,6 +77,14 @@
     }
     @Override
     public void actionPerformed(ActionEvent e) {
-        //if (e.getSource() == play) {}
+        if (e.getActionCommand()== "startPressed") {
+            title.setText("Välj kategori");
+            frame.remove(title2);
+            frame.remove(nameField);
+            frame.add(cat1); frame.add(cat2); frame.add(cat3); frame.add(cat4);
+            frame.add(basePanel);
+            frame.repaint();
+            frame.revalidate();
+        }
     }
 }
Index: src/QuizkampenServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.PrintWriter;\r\nimport java.net.Socket;\r\n\r\npublic class QuizkampenServer extends Thread{\r\n    Socket player1Socket;\r\n    Socket player2Socket;\r\n    Settings settings = new Settings();\r\n    boolean gameActive = false;\r\n\r\n    public QuizkampenServer(Socket player1, Socket player2) throws IOException {\r\n        player1Socket = player1;\r\n        player2Socket = player2;\r\n\r\n    }\r\n    public void run(){\r\n        try(PrintWriter outPlayer1 = new PrintWriter(player1Socket.getOutputStream(), true);\r\n            PrintWriter outPlayer2 = new PrintWriter(player2Socket.getOutputStream(), true);\r\n            BufferedReader inPlayer1 = new BufferedReader(new InputStreamReader(player1Socket.getInputStream()));\r\n            BufferedReader inPlayer2 = new BufferedReader(new InputStreamReader(player2Socket.getInputStream()))){\r\n            String player1UserName = inPlayer1.readLine();\r\n            String player2UserName = inPlayer2.readLine();\r\n            outPlayer1.println(\"Välkommen \" + player1UserName+\". Du kommer att spela mot \"+player2UserName+\"!\");\r\n            outPlayer2.println(\"Välkommen \" + player2UserName+\". Du kommer att spela mot \"+player1UserName+\"!\");\r\n            gameActive = true;\r\n            //Hämta antal omgångar och frågor\r\n            settings.getRounds();\r\n            settings.getQuestions();\r\n            //Låt player1 välja kategori.\r\n            while(inPlayer1.readLine().equals(\"startPressed\")){\r\n                outPlayer1.println(\"SETCATEGORY\");\r\n            }\r\n\r\n        }catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QuizkampenServer.java b/src/QuizkampenServer.java
--- a/src/QuizkampenServer.java	(revision fb246b873dc5b877095ef65f9de77beb5ab8b337)
+++ b/src/QuizkampenServer.java	(date 1669239595624)
@@ -30,8 +30,13 @@
             settings.getQuestions();
             //Låt player1 välja kategori.
             while(inPlayer1.readLine().equals("startPressed")){
-                outPlayer1.println("SETCATEGORY");
+                outPlayer1.println("Välj kategori:");
+                outPlayer2.println("Spelare 1 väljer kategori");
             }
+            //while (inPlayer1.readLine().equals("categoryPressed")){
+              //  outPlayer1.println(new Questions());
+             //   outPlayer2.println(new Questions());
+           // }
 
         }catch (IOException e) {
             e.printStackTrace();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"17fe8b5c-9237-4f7b-a2b4-a663334235bf\" name=\"Changes\" comment=\"Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/GameServerListener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GameServerListener.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/QuizkampenClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/QuizkampenClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/QuizkampenServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/QuizkampenServer.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"ServerStruktur\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Hu00ucNxnURgt22zxsXoabXbjq\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../DemoQK\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.QuizkampenClient\">\r\n    <configuration name=\"GameProtocol\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GameProtocol\" />\r\n      <module name=\"QuizkampenSpel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GameServerListener\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GameServerListener\" />\r\n      <module name=\"QuizkampenSpel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"QuizkampenClient\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"QuizkampenClient\" />\r\n      <module name=\"QuizkampenSpel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"QuizkampenServer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"QuizkampenServer\" />\r\n      <module name=\"QuizkampenSpel\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.GameServerListener\" />\r\n      <item itemvalue=\"Application.QuizkampenClient\" />\r\n      <item itemvalue=\"Application.QuizkampenServer\" />\r\n      <item itemvalue=\"Application.GameProtocol\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.QuizkampenClient\" />\r\n        <item itemvalue=\"Application.GameServerListener\" />\r\n        <item itemvalue=\"Application.GameProtocol\" />\r\n        <item itemvalue=\"Application.QuizkampenServer\" />\r\n        <item itemvalue=\"Application.QuizkampenClient\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"17fe8b5c-9237-4f7b-a2b4-a663334235bf\" name=\"Changes\" comment=\"\" />\r\n      <created>1669119449433</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669119449433</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"Server som matchar två spelare i taget för en ny spelomgång.\">\r\n      <created>1669121771786</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1669121771786</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.\">\r\n      <created>1669125562754</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1669125562754</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00003\" summary=\"Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.\">\r\n      <created>1669125817739</created>\r\n      <option name=\"number\" value=\"LOCAL−00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00003\" />\r\n      <updated>1669125817739</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Server som matchar två spelare i taget för en ny spelomgång.\" />\r\n    <MESSAGE value=\"Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fb246b873dc5b877095ef65f9de77beb5ab8b337)
+++ b/.idea/workspace.xml	(date 1669239796098)
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="17fe8b5c-9237-4f7b-a2b4-a663334235bf" name="Changes" comment="Funkar nu även för flera par samtidigt.Adderat run-metod i QuizkampenServer.">
+    <list default="true" id="17fe8b5c-9237-4f7b-a2b4-a663334235bf" name="Changes" comment="initial">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/GameServerListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GameServerListener.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/GameProtocol.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GameProtocol.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/QuizkampenClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/QuizkampenClient.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/QuizkampenServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/QuizkampenServer.java" afterDir="false" />
     </list>
@@ -25,7 +26,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="LäsaInKategorir" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"openjdk-18\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision fb246b873dc5b877095ef65f9de77beb5ab8b337)
+++ b/.idea/misc.xml	(date 1669238182576)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/GameProtocol.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class GameProtocol extends JFrame implements ActionListener {\r\n    JFrame frame = new JFrame(\"Quizkampen\");\r\n    BufferedImage backgroundImage = ImageIO.read(new File(\"background.jpg\"));\r\n    JPanel basePanel = new JPanel();\r\n    JLabel chooseCategory = new JLabel(\"Välj en kategori\");\r\n    JButton category1 = new JButton(\"Film\");\r\n    JButton category2 = new JButton(\"Musik\");\r\n    JButton category3 = new JButton(\"Java-kunskap\");\r\n    JButton category4 = new JButton(\"Övrigt\");\r\n\r\n    public GameProtocol() throws IOException {\r\n        frame.setContentPane(new JLabel(new ImageIcon(backgroundImage)));\r\n        frame.add(basePanel);\r\n        frame.setSize(800, 530);\r\n        frame.setVisible(true);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setResizable(false);\r\n        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n\r\n    }\r\n\r\n    public void setChooseCategoryGui(){\r\n        basePanel.setLayout(new GridLayout(1,4));\r\n        basePanel.add(category1);\r\n        basePanel.add(category2);\r\n        basePanel.add(category3);\r\n        basePanel.add(category4);\r\n        basePanel.add(chooseCategory);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n    }\r\n    public static void main(String[] args) throws IOException {\r\n        new GameProtocol().setChooseCategoryGui();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GameProtocol.java b/src/GameProtocol.java
--- a/src/GameProtocol.java	(revision fb246b873dc5b877095ef65f9de77beb5ab8b337)
+++ b/src/GameProtocol.java	(date 1669237665905)
@@ -5,46 +5,66 @@
 import java.awt.event.ActionListener;
 import java.awt.image.BufferedImage;
 import java.io.File;
-import java.io.IOException;
+import java.io.FileNotFoundException;
 
 
 public class GameProtocol extends JFrame implements ActionListener {
-    JFrame frame = new JFrame("Quizkampen");
-    BufferedImage backgroundImage = ImageIO.read(new File("background.jpg"));
+    BufferedImage backgroundImage;
     JPanel basePanel = new JPanel();
+    JPanel scoreboardPanel;
+    JLabel question;
     JLabel chooseCategory = new JLabel("Välj en kategori");
-    JButton category1 = new JButton("Film");
-    JButton category2 = new JButton("Musik");
-    JButton category3 = new JButton("Java-kunskap");
-    JButton category4 = new JButton("Övrigt");
+    JButton category1 = new JButton("Djur");
+    JButton category2 = new JButton("Historia");
+    JButton category3= new JButton("Musik");
+    JButton category4 = new JButton("Film");
+    JButton answerButtons;
+
+
+
+    public GameProtocol() {
+        basePanel.setLayout(new GridLayout(5,1));
+        basePanel.add(chooseCategory);
+        category1.setSize(100,70);
+        basePanel.add(category1);
+        category2.setSize(100,70);
+        basePanel.add(category2);
+        category3.setSize(100,70);
+        basePanel.add(category3);
+        category4.setSize(100,70);
+        basePanel.add(category4);
+        getFrame();
+    }
 
-    public GameProtocol() throws IOException {
-        frame.setContentPane(new JLabel(new ImageIcon(backgroundImage)));
-        frame.add(basePanel);
-        frame.setSize(800, 530);
-        frame.setVisible(true);
-        frame.setLocationRelativeTo(null);
-        frame.setResizable(false);
-        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
+
+    private void getFrame() {
+        try {
+            JFrame frame = new JFrame("Quizkampen");
+            backgroundImage = ImageIO.read(new File("background.jpg"));
+            frame.setContentPane(new JLabel(new ImageIcon(backgroundImage)));
+            frame.add(basePanel);
+            frame.setLayout(new FlowLayout());
+            frame.setSize(800, 530);
+            frame.setVisible(true);
+            frame.setLocationRelativeTo(null);
+            frame.setResizable(false);
+            frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
 
+        } catch (Exception e) {
+        }
     }
 
-    public void setChooseCategoryGui(){
-        basePanel.setLayout(new GridLayout(1,4));
-        basePanel.add(category1);
-        basePanel.add(category2);
-        basePanel.add(category3);
-        basePanel.add(category4);
-        basePanel.add(chooseCategory);
-        revalidate();
-        repaint();
+
+    public static void main(String[] args) {
+        GameProtocol gp = new GameProtocol();
     }
+
 
     @Override
     public void actionPerformed(ActionEvent e) {
+        if (e.getSource() == category1) {
+            new Questions();
+        }
 
     }
-    public static void main(String[] args) throws IOException {
-        new GameProtocol().setChooseCategoryGui();
-    }
-}
\ No newline at end of file
+}
